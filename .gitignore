# Created by https://www.toptal.com/developers/gitignore/api/swift,xcode,python,django
# Edit at https://www.toptal.com/developers/gitignore?templates=swift,xcode,python,django

### Swift ###
# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
.build/
.swiftpm/

### Xcode ###
# Xcode
#
# gitignore contributors: remember to update Xcode.gitignore, Swift.gitignore,
# and Objective-C.gitignore if you add entries to this list.
#
# Reference: https://help.github.com/articles/ignoring-files/

## User-specific files
*.xcuserdatad
*.xcschemes
*.xcworkspace
!default.xcworkspace
!default.xcscheme
.xcodesamplecode.plist

## Build generated
build/
DerivedData/

## Various settings
*.moved-aside
*.xcuserstate

## Other
*.app
*.app.dSYM
*.ipa
*.mobileprovision
*.xcarchive
*.xcresult
*.xctestrun

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
/Packages
/.build
/SourcePackages
Package.resolved
Package.swift-e

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts
Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

# OS-generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

### Python/Django ###

# Poetry
poetry.lock
.pdm.toml

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# End of https://www.toptal.com/developers/gitignore/api/swift,xcode,python,django