# .github/workflows/django-ci.yml
# This workflow runs tests on the Django backend and enforces that
# pull requests to the 'main' branch can only come from 'develop'.

name: Django CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main and develop branches
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened] # Run on PR creation, updates, and reopening

jobs:
  # This job runs the test suite
  build:
    name: Run Django Tests
    runs-on: ubuntu-latest # Use the latest Ubuntu runner
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.9, '3.10', '3.11'] # Run tests against multiple Python versions

    steps:
    # 1. Check out the repository code
    - name: Check out code
      uses: actions/checkout@v4

    # 2. Set up the specified Python version
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # 3. Install Python dependencies
    # It's good practice to upgrade pip first.
    # Dependencies are expected to be in a requirements.txt file.
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # 4. Run the Django tests
    # This command assumes your manage.py file is at the root of the project.
    # If it's in a subdirectory (e.g., 'backend/'), change the command to:
    # python backend/manage.py test
    - name: Run Tests
      run: |
        python manage.py test

  # NEW JOB: This job enforces the branch merging rule.
  enforce-branch-naming:
    name: Enforce PR from develop to main
    runs-on: ubuntu-latest
    # This job only runs on Pull Requests that are targeting the 'main' branch.
    if: github.event_name == 'pull_request' && github.base_ref == 'main'

    steps:
      - name: Check source branch name
        run: |
          echo "Pull Request is from ${{ github.head_ref }} to ${{ github.base_ref }}."
          # Check if the head ref (the source branch) is 'develop'.
          if [ "${{ github.head_ref }}" != "develop" ]; then
            echo "::error ::Pull Requests to 'main' must come from the 'develop' branch. Current source branch is '${{ github.head_ref }}'."
            exit 1
          fi
          echo "PR source branch is correct."
